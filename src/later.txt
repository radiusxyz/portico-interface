 async function queryData() {
    const headers = {
      Authorization: `Token ${token}`,
      'Content-Type': 'application/json',
    };

    const data = {
      query: query,
      type: 'flux',
    };

    try {
      const response = await axios.post(`${url}/api/v2/query?org=${org}`, data, { headers });
      const lines = response.data.split('\n');
      const result = lines.map((line) => {
        const fields = line.split(',');
        // console.log(fields);

        return {
          data: fields[6]?.replace(/"/g, ''),
          from: fields[10]?.replace(/"/g, ''),
          to: fields[11]?.replace(/"/g, ''),
          timestamp: fields[9],
        };
      });
      result.pop();
      result.pop();
      // console.log(result);
      // const newData = response.data
      //   .split('\n')
      //   .map((line) => line.split(','))
      //   .filter((arr, index) => arr.length > 1 && index !== 0)
      //   .map((arr) => ({ data: arr[7], fid: arr[8], from: arr[9], tid: arr[10], to: arr[11].slice(0, -1) }));

      // setConstructed(newData);
      setIsDataLoaded(true);
    } catch (error) {
      console.error('QUERY ERROR', error);
    }
  }



    const [roles, setRoles] = useState({
    '0x0': 'u',
    '0x1': 'f3',
    '0x2': 'f0',
    '0x3': 'f2',
    '0x4': 'l',
    '0x5': 'f1',
    A: 'r0',
    B: 'r1',
  });
  const [labels, setLabels] = useState({
    u: '0x0',
    f3: '0x1',
    f0: '0x2',
    f2: '0x3',
    l: '0x4',
    f1: '0x5',
    r0: 'A',
    r1: 'B',
  });


  {
    "0x1": "f3",
    "0x2": "f0",
    "0x3": "f2",
    "0x4": "l",
    "0x5": "f1"
}